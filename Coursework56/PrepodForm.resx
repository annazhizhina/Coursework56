<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>